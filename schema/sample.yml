resourcePath: /Sample-Example-Order_App
description: All about API
version: "1.0.0"
apis:
- path: /orders
  operations:
  - httpMethod: GET
    summary: Get all the orders
    notes: Returns all orders
    responseClass: Orders
    requestClass: Orders
    nickname: getOrders
    consumes:
      - text/json
  - httpMethod: POST
    summary: Add a new order
    notes:  adds new pizza order
    responseClass: OrderAdd
    requestClass: Orders
    nickname: postOrder
    consumes:
      - application/json
    parameters:
      - name: body
        dataType: order
        paramType: body
        required: true
        description: Order to be added
- path: /orders/{id}
  operations:
  - httpMethod: GET
    summary: Get a particular order by id
    notes: Returns an order with specified id
    responseClass: Orders
    requestClass: Orders
    nickname: getOrderById
    consumes:
      - text/json
    parameters:
      - name: id
        dataType: string
        paramType: path
        required: true
        description: Order Id to be fetched
  - httpMethod: DELETE
    summary: Delete the particular order by id
    notes: deletes an order with specified id
    responseClass: Status
    requestClass: Orders
    nickname: deleteOrderById
    consumes:
      - text/json
    parameters:
      - name: id
        dataType: string
        paramType: path
        required: true
        description: Order Id to be deleted
  - httpMethod: PUT
    summary: Update the particular order by id
    notes: updates an order with specified id
    responseClass: Orders
    requestClass: Orders
    nickname: updateOrderById
    consumes:
      - application/json
    parameters:
      - name: id
        dataType: string
        paramType: path
        required: true
        description: Order Id to be updated

      - name: body
        dataType: order
        paramType: body
        required: true
        description: Order to be updated
- path: /pizza/{id}
  operations:
  - httpMethod: GET
    summary: Get the particular pizza type by id
    notes: Returns a pizza type with specified id
    responseClass: Pizza
    requestClass: Pizza
    nickname: getPizzaById
    consumes:
      - text/json
    parameters:
      - name: id
        dataType: string
        paramType: path
        required: true
        description: pizza Id to be fetched
- path: /pizza
  operations:
  - httpMethod: POST
    summary: Add a new type of pizza
    notes: adds a new pizza
    responseClass: Pizza
    requestClass: Pizza
    nickname: postPizza
    consumes:
      - application/json
    parameters:
      - name: body
        dataType: pizza
        paramType: body
        required: true
        description: Pizza to be added

models:
- Orders:
    id: Orders
    adapter: mongo
    connection : mongo
    properties:
      id:
        type: int
      order_name:
        type: String
      order_contents:
        type: String
      quantity:
        type: int
      order_status:
        type: String
- OrderAdd:
    id: OrderAdd
    properties:
      id:
        type: int
      orderName:
        type: String
- Pizza:
    id: Pizza
    adapter: mongo
    connection : mongo
    properties:
       id:
         type: int
       pizza_name:
         type: String
       pizza_contents:
         type: String
       pizza_size:
         type: int
- Status:
    id: Status
    properties:
      statusInfo:
        type: String