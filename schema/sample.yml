resourcePath: /orderApplication
description: All about API
version: "1.0.0"
apis:
- path: /orders
  operations:
  - httpMethod: GET
    summary: to get all orders
    notes: Returns all orders
    responseClass: Orders
    requestClass: Orders
    nickname: getOrders
    consumes:
      - text/json
  - httpMethod: POST
    summary: Add new order
    notes:  adds new pizza order
    responseClass: OrderAdd
    requestClass: Orders
    nickname: postOrder
    consumes:
      - application/json
    parameters:
      - name: body
        dataType: order
        paramType: body
        required: true
        description: Order to be added
- path: /orders/{orderId}
  operations:
  - httpMethod: GET
    summary: get particular order by id
    notes: Returns an order with specified id
    responseClass: Orders
    requestClass: Orders
    nickname: getOrderById
    consumes:
      - text/json
    parameters:
      - name: orderId
        dataType: string
        paramType: path
        required: true
        description: Order Id to be fetched
  - httpMethod: DELETE
    summary: delete particular order by id
    notes: deletes an order with specified id
    responseClass: Status
    requestClass: Orders
    nickname: deleteOrderById
    consumes:
      - text/json
    parameters:
      - name: orderId
        dataType: string
        paramType: path
        required: true
        description: Order Id to be deleted
  - httpMethod: PUT
    summary: update particular order by id
    notes: updates an order with specified id
    responseClass: Orders
    requestClass: Orders
    nickname: updateOrderById
    consumes:
      - application/json
    parameters:
      - name: orderId
        dataType: string
        paramType: path
        required: true
        description: Order Id to be updated

      - name: body
        dataType: order
        paramType: body
        required: true
        description: Order to be updated
- path: /pizza/{pizzaId}
  operations:
  - httpMethod: GET
    summary: get particular pizza type by id
    notes: Returns a pizza type with specified id
    responseClass: Pizza
    requestClass: Pizza
    nickname: getPizzaById
    consumes:
      - text/json
    parameters:
      - name: pizzaId
        dataType: string
        paramType: path
        required: true
        description: pizza Id to be fetched
- path: /pizza
  operations:
  - httpMethod: POST
    summary: Add new type of pizza
    notes: adds a new pizza
    responseClass: Pizza
    requestClass: Pizza
    nickname: postPizza
    consumes:
      - application/json
    parameters:
      - name: body
        dataType: pizza
        paramType: body
        required: true
        description: Pizza to be added

models:
- Orders:
    id: Orders
    adapter: mongo
    connection : mongo
    properties:
      orderId:
        type: String
      orderName:
        type: String
      orderContents:
        type: String
      quantity:
        type: integer
      orderStatus:
        type: String
- OrderAdd:
    id: OrderAdd
    type: responseClass
    properties:
      orderId:
        type: String
      orderName:
        type: String
- Pizza:
    id: Pizza
    adapter: mongo
    connection : mongo
    properties:
       pizzaId:
         type: String
       pizzaName:
         type: String
       pizzaContents:
         type: String
       Size:
         type: integer
- Status:
    id: Status
    type: responseClass
    properties:
      statusInfo:
        type: String


